package bubblepop;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JToggleButton;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author LGY
 */
public class ItemSelect extends javax.swing.JFrame {

    private int selectcnt = 0;
    private int count = 0;
    private Item_list i_list = new Item_list();
    private String level;
    private Game_Info game_info;
    private Main m;
    /**
     * Creates new form ItemSelect
     */
    public ItemSelect() {
    				
        initComponents();
    }
    
    public ItemSelect (Game_Info g_info, Main m)
    {
    	game_info=g_info;
    	this.m=m;
    	level = game_info.get_game_level();

        if(level == "상")
        	selectcnt = 3;
    	else if(level == "중")
    		selectcnt = 4;
    	else if(level == "하")
    		selectcnt = 5;
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();   
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        int how_many_items = 5;	
    	item_buttons=new javax.swing.JToggleButton[how_many_items];
        
    	jPanel1.setLayout(new GridLayout(how_many_items, 1, 0, 0));
    	jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(15 , 15 , 15 , 15));
    	

		for(int i=0; i<how_many_items; i++)
		{
			item_buttons[i] = new JToggleButton(i_list.item_name[i], i_list.item_icon[i]);
			item_buttons[i].setPreferredSize(new java.awt.Dimension(255, 60));
			item_buttons[i].setMinimumSize(new java.awt.Dimension(255,60));
			item_buttons[i].setPreferredSize(new java.awt.Dimension(255, 60));
			item_buttons[i].setIconTextGap(10);
			item_buttons[i].setHorizontalAlignment(javax.swing.SwingConstants.LEFT);	
			
			jPanel1.add(item_buttons[i]); //jPanel1에 버튼을 추가
		}		
		jScrollPane1 = new JScrollPane(jPanel1);                  	
        
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        			
        setTitle("Item Select");
        setAlwaysOnTop(true);
        setMaximumSize(new java.awt.Dimension(320, 350));
        setMinimumSize(new java.awt.Dimension(320, 350));
        setPreferredSize(new java.awt.Dimension(320, 350));
        setResizable(false);

        jScrollPane1.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        //jScrollPane1.setBounds(50, 30, 300, 50);

        jButton1.setText("취소");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });	

        jButton2.setText("선택완료");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

/////////////////////////////////////////////////////////////////////
///////////////////////아이템버튼 액션리스너///////////////////////////////
        item_buttons[0].addItemListener(new ItemListener()
        {
        	public void itemStateChanged(ItemEvent ev) 
        	{
        		System.out.println(" ");
        		if(ev.getStateChange()==ItemEvent.SELECTED)
        		{
        			System.out.println("button0 is selected");
        			if(count>=selectcnt)
        			{
        				item_buttons[0].setSelected(false);
        			}
        			else i_list.set_seelcted(0, true);
        			count++;
    				System.out.println(count);
    			}
        		else if(ev.getStateChange()==ItemEvent.DESELECTED)
        		{
        			System.out.println("button0 is not selected");
        			count--;
        			i_list.set_seelcted(0, false);
        			System.out.println(count);
        		}
		   }
		});
        item_buttons[1].addItemListener(new ItemListener()
        {
        	public void itemStateChanged(ItemEvent ev) 
        	{
        		System.out.println(" ");
        		if(ev.getStateChange()==ItemEvent.SELECTED)
        		{
        			System.out.println("button1 is selected");
        			if(count>=selectcnt)
        			{
        				item_buttons[1].setSelected(false);
        			}
        			else i_list.set_seelcted(1, true);
        			count++;
    				System.out.println(count);
    			}
        		else if(ev.getStateChange()==ItemEvent.DESELECTED)
        		{
        			System.out.println("button1 is not selected");
        			count--;
        			i_list.set_seelcted(1, false);
        			System.out.println(count);
        		}
		   }
		});
        item_buttons[2].addItemListener(new ItemListener()
        {
        	public void itemStateChanged(ItemEvent ev) 
        	{
        		System.out.println(" ");
        		if(ev.getStateChange()==ItemEvent.SELECTED)
        		{
        			System.out.println("button2 is selected");
        			
        			if(count>=selectcnt)
        			{
        				
        				item_buttons[2].setSelected(false);
        			}
        			else i_list.set_seelcted(2, true);
        			count++;
    				System.out.println(count);
    			}
        		else if(ev.getStateChange()==ItemEvent.DESELECTED)
        		{
        			System.out.println("button2 is not selected");
        			count--;
        			i_list.set_seelcted(2, false);
        			System.out.println(count);
        		}
		   }
		});
        item_buttons[3].addItemListener(new ItemListener()
        {
        	public void itemStateChanged(ItemEvent ev) 
        	{
        		System.out.println(" ");
        		if(ev.getStateChange()==ItemEvent.SELECTED)
        		{
        			System.out.println("button3 is selected");
        			if(count>=selectcnt)
        			{
        				item_buttons[3].setSelected(false);
        			}
        			else i_list.set_seelcted(3, true);
        			count++;
    				System.out.println(count);
    			}
        		else if(ev.getStateChange()==ItemEvent.DESELECTED)
        		{
        			System.out.println("button3 is not selected");
        			count--;
        			i_list.set_seelcted(3, false);
        			System.out.println(count);
        		}
		   }
		});
        item_buttons[4].addItemListener(new ItemListener()
        {
        	public void itemStateChanged(ItemEvent ev) 
        	{
        		System.out.println(" ");
        		if(ev.getStateChange()==ItemEvent.SELECTED)
        		{
        			System.out.println("button4 is selected");
        			if(count>=selectcnt)
        			{
        				item_buttons[4].setSelected(false);
        			}
        			else i_list.set_seelcted(4, true);
        			count++;        			
    				System.out.println(count);
    			}
        		else if(ev.getStateChange()==ItemEvent.DESELECTED)
        		{
        			System.out.println("button4 is not selected");
        			count--;
        			i_list.set_seelcted(4, false);
        			System.out.println(count);
        		}
		   }
		});
///////////////////////////////////////////////////////////////////
	 
     
        jLabel1.setText("난이도 \'" + Main.level + "\' 에서 선택 가능한 아이템 개수는 " + selectcnt + "개 입니다." );
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setMaximumSize(new java.awt.Dimension(300, 30));
        jLabel1.setMinimumSize(new java.awt.Dimension(300, 30));
        jLabel1.setOpaque(true);
        jLabel1.setPreferredSize(new java.awt.Dimension(300, 30));

        
        //jPanel1.setMaximumSize(new java.awt.Dimension(300, 30*how_many_items));
        //jPanel1.setMinimumSize(new java.awt.Dimension(300, 30*how_many_items));
        //jPanel1.setPreferredSize(new java.awt.Dimension(300, 30*how_many_items));
        
        //jScrollPane1.setMaximumSize(new java.awt.Dimension(300, 30*how_many_items));
        //jScrollPane1.setMinimumSize(new java.awt.Dimension(300, 30*how_many_items));
        //jScrollPane1.setPreferredSize(new java.awt.Dimension(300, 30*how_many_items));
        
        JPanel contentPane = new JPanel(null);
        contentPane.setPreferredSize(new Dimension(300, 60*how_many_items));
        contentPane.add(jScrollPane1);
       
    
        
        javax.swing.GroupLayout jPanel1layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(jPanel1layout);
        jPanel1layout.setHorizontalGroup(
        		jPanel1layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            //.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1layout.createSequentialGroup()
            	.addGap(20, 20, 20)
            	.addGroup(jPanel1layout.createSequentialGroup() //(jPanel1layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING))
                    .addContainerGap())
            );
            
        jPanel1layout.setVerticalGroup(
        		jPanel1layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        		.addGap(20, 20, 20)
                .addGroup(jPanel1layout.createSequentialGroup()
                    .addContainerGap())
            );
        
        jScrollPane1.setViewportView(jPanel1);
        
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(37, 37, 37)
                .addComponent(jButton2)
                .addGap(46, 46, 46))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
  

    //취소버튼 클릭
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
    	i_list.reset_state();
    	count=0;
    	dispose(); //창을 닫는다
    }                                        

    //선택완료버튼 클릭
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) 
    {                                         
        
    	int reply=JOptionPane.showConfirmDialog(this, "선택하신 아이템을 가지고 플레이하게 됩니다. 게임을 시작하시겠습니까?", null, JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
		
		if (reply == JOptionPane.YES_OPTION)
		{
			//게임 플레이 창으로 전환
			Game frame = new Game(i_list, game_info, count);
			frame.setResizable(false);
			frame.setVisible(true);
			count=0;		
			dispose();
			m.dispose();
			Sound sound = new Sound();
			sound.startSound("sound/Super.wav",0);
	    }
		else
		{
			//다시 선택
	    }
    }         
    

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
    	
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ItemSelect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ItemSelect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ItemSelect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ItemSelect.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ItemSelect().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton[] item_buttons;
    // End of variables declaration//GEN-END:variables
}